services:
  database_service:
    container_name: database_container
    image: postgres:16.3-alpine3.20
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"

  auth_service:
    container_name: auth_container
    build: .
    env_file:
      - .env
    depends_on:
      - database_service
    command: sh -c "sleep 10 && alembic upgrade head && uvicorn src.main:app --host 0.0.0.0 --port 7777"
    ports:
      - "7777:7777"

  nginx:
    container_name: nginx
    image: nginx:stable-alpine3.19-perl
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "1111:1111"
    depends_on:
      - auth_service

  keydb:
    container_name: keydb
    image: eqalpha/keydb
    ports:
      - "6379:6379"

  celery:
      image: celery
      build:
          context: .
      container_name: celery
      command: sh -c "celery --app=src.infrastructure.tasks.celery_app:celery worker -l INFO"
      env_file:
          - .env
      depends_on:
          - keydb
          - auth_service

  flower:
    image: flower
    build:
      context: .
    container_name: flower
    command: sh -c "celery --app=src.infrastructure.tasks.celery_app:celery flower"
    env_file:
      - .env
    depends_on:
      - keydb
      - auth_service
    ports:
      - "5555:5555"

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"

volumes:
  prometheus_data:
  grafana_data:
